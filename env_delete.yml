---
- name: Delete AWS EC2 environment
  hosts: localhost
  gather_facts: False

  tasks:
    - name: Include project definitions from local file if specified
      include_vars:
        file: "{{ aws_project_vars }}"
      when: aws_project_vars is defined

    - name: Print aws_base_name
      debug:
        msg: "aws_base_name = {{ aws_base_name }}"
        verbosity: 1

    - name: Include credential definitions from local file if specified
      include_vars:
        file: "{{ cred_file }}"
      when: cred_file is defined

    - name: Print rhsm_activation_key
      debug:
        msg: "rhsm_activation_key = {{ rhsm_activation_key }}"
        verbosity: 1

    - name: gather information about the VPC
      ec2_vpc_net_info:
        filters:
          "tag:Name": "{{ aws_vpc_name }}"
        region: "{{ aws_region }}"
      register: vpc_info

    - name: print VPC information
      debug:
        var: vpc_info
        verbosity: 1

    - block:

      - name: print VPC id information
        debug:
          var: vpc_info.vpcs[0].id
          verbosity: 1

      - name: remove security group
        ec2_group:
          name: "{{ aws_securitygroup_name }}"
          region: "{{ aws_region }}"
          state: absent

      - name: remove subnet for VPC
        ec2_vpc_subnet:
          az: "{{ aws_az }}"
          cidr: "{{ aws_cidr_block }}"
          region: "{{ aws_region }}"
          state: absent
          vpc_id: "{{ vpc_info.vpcs[0].id }}"
        register: subnet_info

      - name: remove internet gateway for VPC
        ec2_vpc_igw:
          region: "{{ aws_region }}"
          state: absent
          vpc_id: "{{ vpc_info.vpcs[0].id }}"
        register: igw_info

      - name: remove VPC
        ec2_vpc_net:
          name: "{{ aws_vpc_name }}"
          region: "{{ aws_region }}"
          cidr_block: "{{ aws_cidr_block }}"
          state: absent

      when: vpc_info.vpcs is defined
