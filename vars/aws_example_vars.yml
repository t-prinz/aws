---
#
# When specifying an instance, the operating system type must be defined as one of the following:
#
# instance_os_type: Linux
# instance_os_type: Windows
#
# Some public images
#
# ami-08e923f2f38197e46 - RHEL-7.8_HVM_GA-20200225-x86_64-1-Hourly2-GP2
# ami-0c322300a1dd5dc79 - RHEL-8.0.0_HVM-20190618-x86_64-1-Hourly2-GP2
# ami-0f88c5923d28f345b - RHEL-8.2_HVM-20200803-x86_64-0-Hourly2-GP2
# ami-05bb2dae0b1de90b3 - Windows_Server-2019-English-Full-Base-2020.06.10
#
# Reference for instance types
#
# https://aws.amazon.com/ec2/instance-types/
#
# Port references
#
# For general Linux connectivity
#       Port   80: http
#       Port  443: https
#       Port   22: ssh
# For Windows connectivity
#       Port 3389: RDP
#       Port 5986: WinRM over https (default)
#       Port 5985: WinRM over http
# For a DNS server
#       Port   53: DNS over TCP and UDP
# For IdM
#       Port  389: LDAP over TCP
#       Port  636: LDAPS over TCP
#       Port   88: Kerberos over TCP and UDP
#       Port  464: Kerberos over TCP and UDP
#       Port   53: DNS over TCP and UDP
#       Port  123: NTP over UDP

# Modify this - this is used to name/label resources for easier identification

aws_base_name: example

# Modify this - this defines the security group rules as well as the instances that will be created

aws_security_group_rules:
  - proto: tcp
    from_port: 80
    to_port: 80
    cidr_ip: 0.0.0.0/0
  - proto: tcp
    from_port: 443
    to_port: 443
    cidr_ip: 0.0.0.0/0
  - proto: tcp
    from_port: 22
    to_port: 22
    cidr_ip: 0.0.0.0/0
  - proto: tcp
    from_port: 3389
    to_port: 3389
    cidr_ip: 0.0.0.0/0
  - proto: tcp
    from_port: 5986
    to_port: 5986
    cidr_ip: 0.0.0.0/0
  - proto: tcp
    from_port: 5985
    to_port: 5985
    cidr_ip: 0.0.0.0/0

aws_security_group_rules_egress:
  - proto: all
    cidr_ip: 0.0.0.0/0

aws_instances:
  - ansible_instance_shortname: rhel82
    instance_os_type: Linux
    aws_instance_type: t2.medium
    aws_image_id: ami-0f88c5923d28f345b
    aws_assign_public_ip: yes
  - ansible_instance_shortname: win2019
    instance_os_type: Windows
    aws_instance_type: t2.medium
    aws_image_id: ami-05bb2dae0b1de90b3
    aws_assign_public_ip: yes

# Define this if desired.  Note that this will delete the file if it exists and re-create it.

aws_inventory_file: aws_inventory.yml

# Modify these as needed

aws_region: us-east-1
aws_az: us-east-1e
#aws_az: us-east-1a
aws_cidr_block: 10.0.0.0/24

# These shouldn't need to be modified

aws_vpc_name: "{{ aws_base_name }}-vpc"
aws_subnet_name: "{{ aws_base_name }}-subnet"
aws_igw_name: "{{ aws_base_name }}-igw"
aws_securitygroup_name: "{{ aws_base_name }}-securitygroup"

aws_linux_ansible_user: "ec2-user"
aws_windows_ansible_user: "Administrator"
